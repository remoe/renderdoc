name: CI

on:
  push:
    branches:
      - v1.x
      - ci-test
  pull_request:
    branches:
      - v1.x

defaults:
  run:
    shell: bash

jobs:
  macOS:
    name: Mac
    needs: [commit-msg, clang-format]
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        name: [ Development, Release ]
        include:
          - name: Development
            type: Debug
          - name: Release
            type: Release
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 5
    - name: Install Homebrew dependencies
      run: |
        brew update || true
        brew install qt5 lftp automake
        brew link qt5 --force
    - name: Build
      run: |
        mkdir build
        pushd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.type }} ..
        make -j2
        popd
    - if: matrix.type == 'Debug'
      name: Run core unit tests
      run: |
        if ! ./build/bin/renderdoccmd test unit -o test.log; then
          echo "::error::$(cat test.log)" | tr '\n' '\001' | sed -e $'s#\x01#%0A#g';
          exit 1;
        fi
    - if: matrix.type == 'Debug'
      name: Run UI unit tests
      run: |
        if ! ./build/bin/qrenderdoc.app/Contents/MacOS/qrenderdoc --unittest test.log; then
          echo "::error::$(cat test.log)" | tr '\n' '\001' | sed -e $'s#\x01#%0A#g';
          exit 1;
        fi
    - if: matrix.type == 'Release' && github.event_name == 'push'
      name: Preparing for deploy
      run: ./util/buildscripts/scripts/prepare_deps_macos.sh ./build/bin/qrenderdoc.app/Contents/MacOS/qrenderdoc
    - if: matrix.type == 'Release' && github.event_name == 'push'
      name: Packaging artifacts for nightly build
      run: |
        FNAME="RenderDoc_macOS_"`git rev-parse HEAD`.zip
        zip -r "${FNAME}" build/bin
        ls -lh "${FNAME}"
        echo "FNAME=$FNAME" >> $GITHUB_ENV
    - if: matrix.type == 'Release' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      name: Uploading artifacts for nightly build
      uses: softprops/action-gh-release@v1
      with:
        files: ${FNAME}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
